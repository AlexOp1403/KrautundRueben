package de.krautundrueben.krautundrueben.controller;


import de.krautundrueben.krautundrueben.models.Customer;
import de.krautundrueben.krautundrueben.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller // This means that this class is a Controller
@RequestMapping(path="/users") // This means URL's start with /demo (after Application path)
public class UserController {
    @Autowired(required = false) // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String vorname , @RequestParam String nachname, @RequestParam String geburtsdatum, @RequestParam String strasse, @RequestParam String plz, @RequestParam String ort, @RequestParam String telefon, @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Customer n = new Customer((int) userRepository.count() + 1, vorname, nachname, geburtsdatum, strasse, plz, ort, telefon, email);
        userRepository.save(n);
        return "Saved";
    }

    @DeleteMapping(path="/delete/{kundenNr}")
    public @ResponseBody String deleteUser (@PathVariable Integer kundenNr) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        userRepository.deleteById(kundenNr);
        return "Deleted";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Customer> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }
}